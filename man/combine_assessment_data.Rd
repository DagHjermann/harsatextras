% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combine_assessment_data.R
\name{combine_assessment_data}
\alias{combine_assessment_data}
\title{Combine branched assessment results to a single list}
\usage{
combine_assessment_data(
  targetname_to_search = "biota_assess_data",
  store = targets::tar_config_get("store")
)
}
\arguments{
\item{targetname_to_search}{The string to be used to search for targets, by default 'biota_assess_data'.
This string will be used to find the assessment objects.}

\item{store}{The path of the \code{targets} store. If you are inside a targets project, this normally doesn't need
to be given.}
}
\value{
Returns an assessment data object (same as returned by 'get_assessment_data'). This is a list with one item
per time series. Each of these items is again a new list with the following items:
\enumerate{
\item data - a data frame with the raw data
\item assessment - a list of 14 items, including \code{fullData} (data frame with raw data) and \code{pred}(data frame for plotting trend lines)
\item series - a data frame with 1 row
\item info - a list of 20 items
\item output_id - a string describing the series, e.g. "4954 Norway 30A Gressholmen CD Mytilus edulis SB NA"
}
}
\description{
If static branching is used, the workflow will result in one assessment data object per target, named e.g.
"biota_assessment_CD_Gad_W", "biota_assessment_DDEPP_Gad_W", etc. This function finds all those targets and reads
them, and combines them to a single assessment object (similar to what would have resulted from a single
run of 'get_assessmnet_data').
}
\details{
This could probably also have been achieved with "tar_combine".
}
\examples{

# Default usage if you are in the targets project, and the assessment data targets start
# with 'biota_assess_data':
\dontrun{
assessment_data <- combine_assessment_data()
}

\dontrun{
# Reading froma targets store in another project:
assessment_data <- combine_assessment_data(store = "../milkys4/_targets/")
}


}
